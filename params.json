{
  "name": "Parallelized Monte Carlo Tree Search",
  "tagline": "Qiankun Zhuang, Yepeng Yin, 15-618 Final Project",
  "body": "## Proposal\r\n### Summary\r\nWe are going to explore serveral Monte Carlo Tree Search(MCTS) parallelization approaches and parallelize MCTS on GPU using CUDA. Finally we will compare the performance between different parallelization methods on Go.\r\n\r\n### Background\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Challenge\r\nTree searching algorithms are hard to parallelize, especially when GPU is considered. The main challenge of this project will be how to utilize GPU to parallelize MCTS in an efficient way. There are several problems we need to handle:\r\n* CPU, GPU communication. Since the cost of communication between CPU and GPU is expensive, this brings up the problem of how to minimize the data movement.\r\n* Work assignment. The simulation step in MCTS will be random, which will result in imbalanced work.\r\n* Concurrence. Parallelization among single node will have concurrent problem when comes into back-propagation step. We need to solve concurrency problem while not sacrifice the performance.\r\n\r\n### Deliverables\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Platform\r\n* Cluster: Since our main goal is to parallelize MCTS on GPU, so latedays cluster is a good for us.\r\n* Language: C++. High performance, object-oriented (game design for Go), CUDA compile-able.\r\n\r\n### Schedule\r\n\r\n### Reference\r\n_[1] Rocki, Kamil, and Reiji Suda. \"Parallel Monte Carlo Tree Search on GPU.\" SCAI. 2011._",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}